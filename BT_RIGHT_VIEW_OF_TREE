/******************************************************************************

Welcome to GDB Online.
  GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
  C#, OCaml, VB, Perl, Swift, Prolog, Javascript, Pascal, COBOL, HTML, CSS, JS
  Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <queue>
#include <bits/stdc++.h>
#include <stdbool.h>
#include <iostream>

using namespace std;

int maxSum = 0;
    
class TreeNode {
        public:
            int value;
            TreeNode * left;
            TreeNode * right;
            bool isRight;
        TreeNode(int x) {
            value = x;
            left = nullptr;
            right = nullptr;
            isRight = false;
        }
};

void printRightView(TreeNode *root) {
    
    queue<TreeNode *> q = {};
    
    
    if(root != nullptr) {
        root->isRight = true;
        q.push(root);
    }
    
    while(!q.empty()) {
        TreeNode *node = q.front();
        q.pop();
        if(node->left != nullptr)
            q.push(node->left);
        if(node->right != nullptr && node->isRight == true) {
            node->right->isRight = true;
            q.push(node->right);
            cout << node->right->value << " ";
        }
        if(node->right != nullptr && node->isRight == false) {
            q.push(node->right);
        }
    }
        
    
}
int main()
{
    TreeNode* root = new TreeNode(35);
    root->left = new TreeNode(11);
    root->right = new TreeNode(15);
    root->left->left = new TreeNode(20);
    root->left->right = new TreeNode(45);
    root->right->left = new TreeNode(10);
    root->right->right = new TreeNode(75);
    root->right->right->right = new TreeNode(95);
    root->right->right->right->right = new TreeNode(55);

    printRightView(root);

    return 0;
}
